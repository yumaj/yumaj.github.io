<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Codeforces 540C Ice Cave</title>
    <link href="/2020/06/02/Codeforces-540C-Ice-Cave/"/>
    <url>/2020/06/02/Codeforces-540C-Ice-Cave/</url>
    
    <content type="html"><![CDATA[<p>Use BFS to travel graph and find a path to endpoint, if the endpoint not ‘X’, need two path.</p><p><a href="'https://medium.com/@yumaj/codeforces-540c-ice-cave-8e0f7a7d4468'">problem link</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#include&lt;iostream&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> using namespace std;</span><br><span class="line"></span><br><span class="line"> int sr,sc, er, ec;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> int dirrow[4] &#x3D; &#123;-1,1,0,0&#125;;</span><br><span class="line"> int dircol[4] &#x3D; &#123;0,0,-1,1&#125;;</span><br><span class="line"></span><br><span class="line"> int n, m , k ;</span><br><span class="line"> int delcount;</span><br><span class="line"> int bfs(int i, int j,char maze[][502],int used[][502])</span><br><span class="line"> &#123;</span><br><span class="line">     if(i &lt; 0 || i &gt;&#x3D; n ||j &lt; 0  || j &gt;&#x3D; m )return 0; </span><br><span class="line">     if(i &#x3D;&#x3D; er-1 &amp;&amp; j &#x3D;&#x3D; ec-1 &amp;&amp; maze[i][j] &#x3D;&#x3D; &#39;X&#39;)return 1;</span><br><span class="line">     if(maze[i][j] &#x3D;&#x3D; &#39;X&#39;)</span><br><span class="line">     &#123;</span><br><span class="line">         return 0;</span><br><span class="line">     &#125;</span><br><span class="line">     else </span><br><span class="line">     &#123;</span><br><span class="line">         int findpath &#x3D; 0;</span><br><span class="line">         maze[i][j] &#x3D; &#39;X&#39;;</span><br><span class="line">         for(int d &#x3D; 0 ; d &lt; 4; d++)</span><br><span class="line">         &#123;</span><br><span class="line">             int newdirrow &#x3D; i + dirrow[d];</span><br><span class="line">             int newdircol &#x3D; j + dircol[d];</span><br><span class="line">             if(newdirrow &gt;&#x3D; 0 &amp;&amp; newdirrow &lt;  n &amp;&amp; newdircol &gt;&#x3D;0  &amp;&amp; newdircol &lt; m ) </span><br><span class="line">             &#123;</span><br><span class="line">                 int result &#x3D; bfs(newdirrow,newdircol,maze,used);</span><br><span class="line">                 if(result &#x3D;&#x3D; 1)</span><br><span class="line">                 &#123;</span><br><span class="line">                     return 1;</span><br><span class="line">                 &#125;</span><br><span class="line"></span><br><span class="line">             &#125;</span><br><span class="line"></span><br><span class="line">         &#125;</span><br><span class="line">         return 0;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> int main()</span><br><span class="line"> &#123;</span><br><span class="line"></span><br><span class="line">     cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"></span><br><span class="line">     char maze[502][502];</span><br><span class="line"></span><br><span class="line">     int used[502][502];</span><br><span class="line">     for(int i &#x3D; 0; i &lt; n; i++)</span><br><span class="line">     &#123;</span><br><span class="line">         for(int j &#x3D; 0; j &lt; m; j++)</span><br><span class="line">         &#123;</span><br><span class="line"></span><br><span class="line">             cin &gt;&gt; maze[i][j];</span><br><span class="line">             used[i][j] &#x3D; 0;</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">     &#125;</span><br><span class="line">     cin &gt;&gt; sr &gt;&gt; sc &gt;&gt; er &gt;&gt; ec;</span><br><span class="line">     maze[sr -1][sc - 1] &#x3D; &#39;.&#39;;</span><br><span class="line">     int ans  &#x3D; bfs(sr-1,sc-1,maze,used);</span><br><span class="line">     if(ans &#x3D;&#x3D; 1)cout &lt;&lt; &quot;YES&quot; &lt;&lt; endl;</span><br><span class="line">     else cout &lt;&lt; &quot;NO&quot; &lt;&lt; endl;</span><br><span class="line">     return 0;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
